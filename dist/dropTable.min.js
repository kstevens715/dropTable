/*! Drag, Drop & Process data from spreadsheet - v0.1.0 - 2013-04-13
* https://github.com/kstevens715/dropTable
* Copyright (c) 2013 Kyle Stevens; Licensed MIT */
(function(a){var r,e,t="Badge",n={init:function(t){this.each(function(){var a=r.data("dropTable");a||r.data("dropTable",{rows:[],columns:[]})}),e=a.extend({fnProcessRow:null,fnDropComplete:null,delayProcessing:!1,fieldDelimiter:"	",dataFormat:"Text",columnDefinitions:null,firstRowIsHeader:!1},t),this.on("dragover",n.dragOver),this.on("drop",n.drop),this.on("dragenter",n.dragEnter),this.on("dragleave",n.dragLeave),n.renderDropTable()},drop:function(a){if(n.isBadge(a))return!1;var t=a.originalEvent.dataTransfer.getData(e.dataFormat);return r.data("dropTable").rows=n.parseData(t),n.extractHeaders(),e.delayProcessing||o.process(),n.renderTable(),"function"==typeof e.fnDropComplete&&e.fnDropComplete(),!0},dragOver:function(a){return n.isBadge(a)},dragEnter:function(){return!1},dragLeave:function(){return!1},isBadge:function(a){var r=a.originalEvent.dataTransfer.getData(t);return""===r?!1:!0},parseData:function(r){return a.csv.toArrays(r,{separator:e.fieldDelimiter})},extractHeaders:function(){e.firstRowIsHeader&&r.data("dropTable").rows[0].forEach(function(a,e){r.data("dropTable").columns[e]=a.toLowerCase()})},renderDropTable:function(){var a="<div class='droptable-sidebar'></div><div class='droptable-droparea'><p>Drop Data Here!</p></div>";r.html(a),n.renderSidebar()},renderSidebar:function(){var a='<div><ul class="droptable-columndefinitions unstyled">';for(var t in e.columnDefinitions)a+='<li id="droptable-badge-'+t+'">',a+='<span class="badge" draggable="true" ',a+='ondragstart="',a+="event.dataTransfer.setData('Badge', '"+t+"')\"",a+=">",a+=t,a+="</span></li>";a+="</ul></div>",r.find(".droptable-sidebar").html(a)},applyStyling:function(){},renderTable:function(){var a,e;a='<table class="table table-striped table-bordered"><thead>',r.data("dropTable").rows[0].forEach(function(t,n){e=r.data("dropTable").columns[n],void 0===e?(a+="<th>UNMAPPED</th>",r.data("dropTable").columns[n]="UNMAPPED"+n):a+="<th><span class='badge'>"+e+"</span></th>"}),a+="</thead><tbody>",r.data("dropTable").rows.forEach(function(r){a+="<tr>",r.forEach(function(r){a=a+"<td>"+r+"</td>"}),a+="</tr>"}),a+="</tbody>",a+="</table>",r.find(".droptable-droparea").html(a);var t=r.find("th");t.on("dragover",n.dragOverColumn),t.on("drop",n.mapColumn)},dragOverColumn:function(a){var r=a.originalEvent.dataTransfer.getData(t);return r===t?!0:!1},mapColumn:function(e){var n=e.originalEvent.dataTransfer.getData(t);r.data("dropTable").columns[this.cellIndex]=n.toLowerCase(),a(this).html("<span class='badge'>"+n+"</span>"),a("li span.badge:contains('"+n+"')").parent().remove()}},o={process:function(){var a={};"function"==typeof e.fnProcessRow&&r.data("dropTable").rows.forEach(function(t,n){(!e.firstRowIsHeader||n>0)&&(a.rawData=t,t.forEach(function(e,t){a[r.data("dropTable").columns[t]]=e}),e.fnProcessRow(a,n+1))})}};a.fn.dropTable=function(a){return r=this,o[a]?o[a].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof a&&a||n.init.apply(this,arguments),this}})(jQuery);